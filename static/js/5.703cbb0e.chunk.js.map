{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileImg/ProfileImg.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","useStyles","makeStyles","theme","FormDataDiv","padding","display","alignItems","fontSize","FormDataButton","margin","justifyContent","ContactsContainer","FormDataDivContact","color","FormDataSpan","paddingRight","fontWeight","ProfileDataForm","classes","onSubmit","initialValues","profile","render","handleSubmit","className","name","component","Input","validate","required","placeholder","Textarea","type","Object","keys","contacts","map","key","createField","Button","variant","endIcon","styleStatus","borderBottom","styleStatusSpan","marginTop","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","TextField","id","label","size","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profileLoginName","ProfileDataDiv","ProfileDataKey","ProfileDataKeyContacts","ProfileDataKeysDiv","goEditModButton","ProfileData","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","contactTitle","contactValue","onClick","goToEditMode","Contact","href","ProfileInfo","Preloader","formData","saveProfile","itemPost","postImage","borderRadius","postMessage","flex","postLike","flexDirection","Post","width","alt","src","message","profileMyPost","myPostContainer","myPostButton","AddNewPostForm","MyPosts","React","memo","PostDataNew","PostData","element","Typography","sx","textAlign","console","log","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","profileImg","imgEdit","changePhoto","styled","ProfileImg","savePhoto","photos","large","userPhoto","htmlFor","accept","target","files","length","IconButton","PhotoCamera","wrapper_profile","gridTemplateRows","gridTemplateColumns","gridGap","wrapperProfileImg","background","wrapperProfileInfo","wrapperMyPostsContainer","Profile","compose","authorizedUserId","userId","login","getUsersProfile","getStatus","withRouter","match","history","params","push"],"mappings":"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","file":"static/js/5.703cbb0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport function withAuthRedirect(Component) {\r\n    const RedirectComponent = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...restProps} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect,\r\n        {})(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/formControls\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {ProfileType} from \"../../../types/type\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport {Button} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    FormDataDiv: {\r\n        padding: \"4px 0px\",\r\n        display: 'flex',\r\n        alignItems: \"center\",\r\n        fontSize: '19px',\r\n    },\r\n    FormDataButton: {\r\n        margin: \"15px 0px 0px 0px\",\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    ContactsContainer: {\r\n        fontSize: '19px',\r\n    },\r\n    FormDataDivContact: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: \"4px 3px 4px 16px\",\r\n        fontSize: '19px',\r\n        color: '#2a5885',\r\n    },\r\n    FormDataSpan: {\r\n        color: '#818e9c',\r\n        paddingRight: \"10px\",\r\n        fontWeight: 600,\r\n    },\r\n}))\r\n\r\ntype InitialPropsType = {\r\n    profile: ProfileType\r\n    initialValues: ProfileType\r\n    isOwner: boolean\r\n    onSubmit: (formData: ProfileType) => void\r\n    goToEditMode: () => void\r\n}\r\nexport const ProfileDataForm: React.FC<InitialPropsType> = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return <Form\r\n        onSubmit={props.onSubmit}\r\n        initialValues={{\r\n            ...props.profile,\r\n        }}\r\n        render={({handleSubmit}) => (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <div className={classes.FormDataDiv}>\r\n                        <span className={classes.FormDataSpan}>Name:</span>\r\n                        <span>\r\n                            {<Field name={\"fullName\"}\r\n                                    component={Input}\r\n                                    validate={required}\r\n                                    placeholder={\"Full name\"}\r\n                            />}\r\n                        </span>\r\n                    </div>\r\n                    <div className={classes.FormDataDiv}>\r\n                        <span className={classes.FormDataSpan}>About me:</span>\r\n                        <span>\r\n                            {<Field name={\"aboutMe\"}\r\n                                    component={Input}\r\n                                    placeholder={\"About me\"}\r\n                            />}\r\n                        </span>\r\n                    </div>\r\n                    <div className={classes.FormDataDiv}>\r\n                        <span className={classes.FormDataSpan}>My professional skills:</span>\r\n                        <span>\r\n                            {<Field name={\"lookingForAJobDescription\"}\r\n                                    component={Textarea}\r\n                                    placeholder={\"My professional skills\"}\r\n                            />}\r\n                        </span>\r\n                    </div>\r\n                    <div className={classes.FormDataDiv}>\r\n                        <span className={classes.FormDataSpan}>Looking for a job:</span>\r\n                        <span>\r\n                            {<Field name={\"lookingForAJob\"} component={Input}\r\n                                    type={'checkbox'}/>}\r\n                        </span>\r\n                    </div>\r\n                    <div className={classes.ContactsContainer}>\r\n                        <span\r\n                            className={classes.FormDataSpan}>Contacts:</span> {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div key={key} className={classes.FormDataDivContact}>\r\n                            <span className={classes.FormDataSpan}>{createField(key, \"contacts.\" + key, [], Input)}</span>\r\n                        </div>\r\n                    })}\r\n                    </div>\r\n                    <div className={classes.FormDataButton}>\r\n                        <Button variant=\"contained\"\r\n                                type=\"submit\"\r\n                                color=\"warning\"\r\n                                endIcon={<SaveIcon/>}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )}\r\n    />\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {TextField, Theme} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    styleStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontSize: '18px',\r\n        borderBottom: '1px solid #dce1e6',\r\n    },\r\n    styleStatusSpan: {\r\n        fontWeight: 600,\r\n        padding: '9px',\r\n        marginTop: '5px',\r\n    }\r\n}))\r\n\r\n\r\ntype PropsProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\nconst ProfileStatus: React.FC<PropsProfileStatusType> = (props) => {\r\n    const classes = useStyles()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div className={classes.styleStatus}>\r\n                <span className={classes.styleStatusSpan}>\r\n                    Status:\r\n                </span>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={classes.styleStatus}>\r\n               <span className={classes.styleStatusSpan}>\r\n                    Status:\r\n                </span>\r\n                <TextField id=\"outlined-basic\"\r\n                           label=\"Status\"\r\n                           variant=\"outlined\"\r\n                           size=\"small\"\r\n                           color=\"info\"\r\n                           onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React, {useState} from 'react';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\nimport {ContactsType, ProfileType} from '../../../types/type';\r\nimport ProfileStatus from '../ProfileStatus/ProfileStatus';\r\nimport {makeStyles} from '@mui/styles';\r\nimport {Button, Theme} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    profileLoginName: {\r\n        fontWeight: 700,\r\n        fontSize: '30px',\r\n    },\r\n    ProfileDataDiv: {\r\n        marginTop: \"15px\",\r\n        fontSize: '19px',\r\n        color: '#2a5885',\r\n    },\r\n    ProfileDataKey: {\r\n        color: '#818e9c',\r\n        paddingRight: \"10px\",\r\n        fontWeight: 600,\r\n\r\n    },\r\n    ProfileDataKeyContacts: {\r\n        padding: \"0px 10px 0px 15px\",\r\n        color: '#818e9c',\r\n        fontWeight: 600,\r\n    },\r\n    ProfileDataKeysDiv: {\r\n        padding: \"3px 0px\",\r\n    },\r\n    goEditModButton: {\r\n        padding: \"3px 0px\",\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}))\r\n\r\nexport type ProspProfileInfoType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n}\r\n\r\n\r\nconst ProfileInfo: React.FC<ProspProfileInfoType> = (props) => {\r\n    const classes = useStyles()\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        props.saveProfile(formData)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span className={classes.profileLoginName}>\r\n                    {props.profile.fullName}\r\n                </span>\r\n                <ProfileStatus status={props.status}\r\n                               updateStatus={props.updateStatus}\r\n                               isOwner={props.isOwner}\r\n                />\r\n                {editMode\r\n                    ? <ProfileDataForm profile={props.profile}\r\n                                       initialValues={props.profile}\r\n                                       isOwner={props.isOwner}\r\n                                       onSubmit={onSubmit}\r\n                                       goToEditMode={() => {\r\n                                           setEditMode(false)\r\n                                       }}/>\r\n                    : <ProfileData profile={props.profile}\r\n                                   isOwner={props.isOwner}\r\n                                   goToEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}/>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\ntype InitialProspProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\nconst ProfileData: React.FC<InitialProspProfileDataType> = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return <div className={classes.ProfileDataDiv}>\r\n        <div className={classes.ProfileDataKeysDiv}>\r\n            <span className={classes.ProfileDataKey}>Name:</span> {props.profile.fullName}\r\n        </div>\r\n        <div className={classes.ProfileDataKeysDiv}>\r\n            <span className={classes.ProfileDataKey}>About me:</span> {props.profile.aboutMe}\r\n        </div>\r\n        <div className={classes.ProfileDataKeysDiv}>\r\n            <span className={classes.ProfileDataKey}>My professional skills:</span>\r\n            {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        <div className={classes.ProfileDataKeysDiv}>\r\n            <span className={classes.ProfileDataKey}>Looking for a job:</span>\r\n            {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        <div className={classes.ProfileDataKeysDiv}>\r\n            <span className={classes.ProfileDataKey}>Contacts:</span>\r\n            {Object\r\n                .keys(props.profile.contacts)\r\n                .map((key)  => {\r\n                    return <Contact key={key}\r\n                                    contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key as keyof ContactsType]}\r\n                    />\r\n            })}\r\n        </div>\r\n        <div className={classes.goEditModButton}>\r\n            {props.isOwner\r\n                ? <Button variant=\"contained\"\r\n                          color=\"info\"\r\n                          onClick={props.goToEditMode}\r\n                          endIcon={<SendIcon/>}>\r\n                    Edit\r\n                </Button>\r\n                : <span></span>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype InitialPropsContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\nexport const Contact: React.FC<InitialPropsContactType> = ({contactTitle, contactValue}) => {\r\n    const classes = useStyles()\r\n    return <div className={classes.ProfileDataKeysDiv}>\r\n        <span className={classes.ProfileDataKeyContacts}>\r\n            {contactTitle}:\r\n        </span>\r\n        <a href={contactValue}>{contactValue}</a>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo\r\n","import React from 'react';\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    itemPost: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        fontSize: '20px',\r\n        borderBottom: '1px solid #dce1e6',\r\n        padding: \"10px 0px\"\r\n    },\r\n    postImage: {\r\n        borderRadius: '20px',\r\n    },\r\n    postMessage: {\r\n        flex: 1\r\n    },\r\n    postLike: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    }\r\n}))\r\n\r\n\r\ntype InitialPropsType = {\r\n    message: string\r\n    value: number\r\n}\r\nconst Post: React.FC<InitialPropsType> = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <div className={classes.itemPost}>\r\n            <div className={classes.postImage}>\r\n                <img width=\"70px\"\r\n                     alt=\"avatarUser\"\r\n                     src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo7S86HLw3FSPP3Iflpfq1OkfEfkB8zdRGpw&usqp=CAU'/>\r\n            </div>\r\n            <div className={classes.postMessage}>{props.message}</div>\r\n            <div className={classes.postLike}>\r\n                <ThumbUpIcon color=\"info\"/> <span > {props.value}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {PostType} from \"../../../types/type\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport {Button, Theme, Typography} from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    profileMyPost: {\r\n        margin: \"25px\"\r\n    },\r\n    myPostContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    myPostButton: {\r\n        padding: \"12px\"\r\n    }\r\n}))\r\n\r\n\r\ntype AddNewPostFormPropsType = {\r\n    onSubmit: (values: any) => void\r\n}\r\nconst AddNewPostForm: React.FC<AddNewPostFormPropsType> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                onSubmit={props.onSubmit}\r\n                render={({handleSubmit}) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className={classes.myPostContainer}>\r\n                            <div>\r\n                                <Field name=\"newPostText\"\r\n                                       component='textarea'\r\n                                       validate={required}\r\n                                       placeholder={\"Post message\"}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.myPostButton}>\r\n                                <Button variant=\"contained\"\r\n                                        color=\"info\"\r\n                                        endIcon={<SendIcon/>}\r\n                                        type=\"submit\" name={\"btnAddPost\"}\r\n                                >\r\n                                    Send\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\ntype InitialMyPostPropsType = {\r\n    PostData: PostType[]\r\n    newPostText: string\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\n\r\nconst MyPosts: React.FC<InitialMyPostPropsType> = React.memo(props => {\r\n    const classes = useStyles();\r\n\r\n    let PostDataNew = props.PostData.map(\r\n        (element) => {\r\n            return (\r\n                <Post key={element.id} message={element.message} value={element.value}/>\r\n            )\r\n        }\r\n    );\r\n\r\n    let onAddPost = (formData: any) => {\r\n        console.log(formData)\r\n        props.addPost(formData.newPostText);\r\n        formData.newPostText = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileMyPost}>\r\n            <div>\r\n                <Typography sx={{\r\n                    textAlign: 'center',\r\n                    fontWeight: '600',\r\n                    fontSize: '30px'\r\n                }}>\r\n                    My posts\r\n                </Typography>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div>{PostDataNew}</div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        PostData: state.profilePage.PostData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","import React from \"react\";\r\nimport {makeStyles, styled} from \"@mui/styles\";\r\nimport {IconButton, Theme} from \"@mui/material\";\r\nimport userPhoto from \"../../../assets/img/png-transparent-computer-icons-user-user-icon-thumbnail.png\";\r\nimport {ProfileType} from \"../../../types/type\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {PhotoCamera} from \"@mui/icons-material\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    profileImg: {},\r\n    imgEdit: {\r\n        display: \"block\",\r\n        margin: 'auto',\r\n        width: '240px',\r\n        padding: '20px'\r\n    },\r\n    changePhoto: {\r\n        textAlign: 'center',\r\n        fontWeight: 700,\r\n        fontSize: \"19px\",\r\n    }\r\n}))\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\ntype InitialPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n}\r\nconst ProfileImg: React.FC<InitialPropsType> = ({isOwner, profile, savePhoto}) => {\r\n    const classes = useStyles()\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileImg}>\r\n            <img alt=\"ProfilePhoto\" className={classes.imgEdit} src={profile.photos.large || userPhoto}/>\r\n            <div className={classes.changePhoto}>\r\n                {isOwner && <div>\r\n                    <span>Сhange photo:</span>\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={mainPhotoSelected}/>\r\n                        <IconButton color='secondary' aria-label=\"upload picture\" component=\"span\">\r\n                            <PhotoCamera/>\r\n                        </IconButton>\r\n                    </label>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileImg","import React from 'react';\r\nimport ProfileInfo, {ProspProfileInfoType} from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileImg from \"./ProfileImg/ProfileImg\";\r\nimport {makeStyles} from '@mui/styles';\r\nimport {Theme} from '@mui/material';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    wrapper_profile: {\r\n        display: 'grid',\r\n        gridTemplateRows: \"1fr auto\",\r\n        gridTemplateColumns: '4fr 8fr',\r\n        gridGap: '1rem',\r\n    },\r\n    wrapperProfileImg: {\r\n        background: '#ffffff',\r\n        borderRadius: '6px'\r\n    },\r\n    wrapperProfileInfo: {\r\n        background: '#ffffff',\r\n        borderRadius: '6px',\r\n        padding: '15px'\r\n    },\r\n    wrapperMyPostsContainer: {\r\n        background: '#ffffff',\r\n        borderRadius: '6px',\r\n    },\r\n}))\r\n\r\nconst Profile: React.FC<ProspProfileInfoType> = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div className={classes.wrapper_profile}>\r\n            <div className={classes.wrapperProfileImg}>\r\n                <ProfileImg profile={props.profile}\r\n                            isOwner={props.isOwner}\r\n                            savePhoto={props.savePhoto}\r\n                />\r\n            </div>\r\n            <div className={classes.wrapperProfileInfo}>\r\n                <ProfileInfo profile={props.profile}\r\n                             status={props.status}\r\n                             isOwner={props.isOwner}\r\n                             updateStatus={props.updateStatus}\r\n                             saveProfile={props.saveProfile}\r\n                             savePhoto={props.savePhoto}\r\n                />\r\n            </div>\r\n            <div></div>\r\n            <div className={classes.wrapperMyPostsContainer}>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {ProfileType} from \"../../types/type\";\r\n\r\n\r\ntype MapStateType = {\r\n    profile: ProfileType\r\n    status: string\r\n    login: string\r\n    authorizedUserId: number\r\n}\r\ntype MapDispatchType = {\r\n    getUsersProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n    savePhoto: (file: File) => void\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = MapStateType & MapDispatchType & RouteComponentProps<PathParamsType>;\r\n\r\n\r\nconst ProfileContainer: React.FC<PropsType> = ({\r\n                                                   match,\r\n                                                   history,\r\n                                                   authorizedUserId,\r\n                                                   getUsersProfile,\r\n                                                   getStatus,\r\n                                                   ...props\r\n                                               }) => {\r\n\r\n    useEffect(() => {\r\n        let userId = +match.params.userId;\r\n\r\n        function refreshProfile() {\r\n            if (!userId) {\r\n                userId = authorizedUserId;\r\n                if (!userId) {\r\n                    history.push('/login')\r\n                }\r\n            }\r\n            getUsersProfile(userId);\r\n            getStatus(userId)\r\n        }\r\n\r\n        refreshProfile()\r\n    }, [match.params.userId, getUsersProfile, getStatus, authorizedUserId, history])\r\n\r\n\r\n    // const refreshProfile = () => {\r\n    //     let userId = +props.match.params.userId;\r\n    //     if (!userId) {\r\n    //         userId = props.authorizedUserId;\r\n    //         if (!userId) {\r\n    //             props.history.push('/login')\r\n    //         }\r\n    //     }\r\n    //     props.getUsersProfile(userId);\r\n    //     props.getStatus(userId)\r\n    // }\r\n\r\n    return (\r\n        <Profile  {...props}\r\n                  profile={props.profile}\r\n                  status={props.status}\r\n                  updateStatus={props.updateStatus}\r\n                  isOwner={!match.params.userId}\r\n                  savePhoto={props.savePhoto}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}